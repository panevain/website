:root {
    --font-color: #FFF;
    --background-color: #000;
    --opaque: rgba(0, 0, 0, 1);
    --transparent: rgba(0, 0, 0, 0);
    --cell-size: 2vw;
    --grid-color: #457B9D;
}

/* BEGIN CSS RESET; https://www.joshwcomeau.com/css/custom-css-reset/ */

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
    box-sizing: border-box;
}

/*
  2. Remove default margin
*/
* {
    margin: 0;
}

/*
  Typographic tweaks!
  3. Add accessible line-height
  4. Improve text rendering
*/
body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

/*
  5. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

/*
  6. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
    font: inherit;
}

/*
  7. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/*
  8. Create a root stacking context
*/
#root,
#__next {
    isolation: isolate;
}

/* END CSS RESET */

html {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    color: var(--font-color);
    text-align: center;
    overflow: hidden;

    perspective: 100vh;
    perspective-origin: 50% 50%;
}

html,
body {
    height: 100vh;
    width: 100vw;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    background: var(--background-color);
    transform-style: preserve-3d;
}

section {
    position: relative;
    z-index: 1;

    margin: 20px;
    background-color: var(--background-color);
}

.row {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-top: 20px;
}

.row img {
    width: 50px;
    height: 50px;
    margin: 10px;
}

.fine-print {
    position: fixed;
    z-index: 1;
    left: 10px;
    bottom: 10px;

    text-decoration: none;
    color: var(--font-color);
    font-size: small;
}

.grid {
    position: fixed;
    z-index: -1;

    background-size: var(--cell-size) var(--cell-size);
    background-image:
        linear-gradient(to right, var(--grid-color) 2px, transparent 1px),
        linear-gradient(to bottom, var(--grid-color) 2px, transparent 1px);

    height: 100vh;
}

@keyframes scroll {
    0% {
        translate: 0px;
    }

    100% {
        translate: 0px 0px calc(-1 * var(--cell-size));
    }
}

.scroll {
    animation: scroll 1s infinite linear;
}

.ceiling {
    width: 100vw;
    mask-image: linear-gradient(to top, var(--opaque), var(--transparent));
}

.wall {
    width: 100vh;
    mask-image: linear-gradient(to left, var(--opaque), var(--transparent));
}

#bottom {
    transform: rotateX(90deg) translateZ(-50vh);
    bottom: 0;
}

#top {
    transform: rotateX(90deg) translateZ(50vh);
    top: 0;
}

#left {
    transform: rotateY(-90deg) translateZ(50vh);
    left: 0;
}

#right {
    transform: rotateY(-90deg) translateZ(-50vh);
    right: 0;
}